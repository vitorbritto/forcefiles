#!/bin/bash

# ------------------------------------------------------------------------------
# | NPM Settings                                                               |
# ------------------------------------------------------------------------------

run_npm() {

    # Check for npm
    if type_exists "npm"; then

        # Install Task Runer Packages
        e_header "Installing Task Runner Packages"
        local NPM_AUTOMATION='grunt-cli gulp-cli'
        npm i -g "$NPM_AUTOMATION"
        e_success "Task Runner Packages successfully installed!"

        # Install Lint Packages
        e_header "Installing Lint Packages"
        local NPM_LINT='jshint jscs clean-css eslint babel-eslint uncss'
        npm i -g "$NPM_LINT"
        e_success "Lint Packages successfully installed!"

        # Install ES.next / ES6 / ES2015 Packages
        e_header "Installing ES.next Packages"
        local NPM_ES6='babel'
        npm i -g "$NPM_ES6"
        e_success "ES.next Packages successfully installed!"

        # Install Live Reload Packages
        e_header "Installing Live Reload Packages"
        local NPM_BUNDLE_RELOAD='pm2 browser-sync'
        npm i -g "$NPM_BUNDLE_RELOAD"
        e_success "Live Reload Packages successfully installed!"

        # Install Module Bundler Packages
        e_header "Installing Module Bundler Packages"
        local NPM_MODULE_BUNDLER='jspm webpack'
        npm i -g "$NPM_MODULE_BUNDLER"
        e_success "Module Bundler Packages successfully installed!"

        # Install Helpers
        e_header "Installing Helpers Packages"
        local NPM_HELPERS='foundation-cli yo bower slush'
        npm i -g "$NPM_HELPERS"
        e_success "Helpers Packages successfully installed!"

        # Install Generators
        e_header "Installing Generators"
        local NPM_GENERATORS='slush-generator generator-generator generator-mcfly generator-angm generator-angular-fullstack generator-fountain-webapp generator-ruby-starter-kit react-starter-kit generator-rc generator-redux-stack generator-speedseed'
        npm i -g "$NPM_GENERATORS"
        e_success "Generators successfully installed!"

        # Install Test Packages
        e_header "Installing Test Packages"
        local NPM_TEST='phantomjs-prebuilt casperjs@1.1.0-beta4 slimerjs dalek-cli cucumber pioneer mocha coveralls istanbul karma protractor'
        npm i -g "$NPM_TEST"
        e_success "Test Packages successfully installed!"

        # Install Pre-processors Packages
        e_header "Installing Pre-processors Packages"
        local NPM_PREPROCESSORS='typescript stylus pug node-sass'
        npm i -g "$NPM_PREPROCESSORS"
        e_success "Pre-processors Packages successfully installed!"

        # Install JavaScript Utils Packages
        e_header "Installing JavaScript Utils Packages"
        local NPM_UTILS='lodash uglifyjs express shelljs npm-check cbt_tunnels aglio surge'
        npm i -g "$NPM_UTILS"
        e_success "JavaScript Utils Packages successfully installed!"

        # Install Performance Packages
        e_header "Installing Performance Packages"
        local NPM_PERF='phantomas psi webpagetest plato yslow'
        npm i -g "$NPM_PERF"
        e_success "Performance Packages successfully installed!"

        # Install Native Apps Packages
        e_header "Installing Native Apps Packages"
        local NPM_NATIVE='electron-prebuilt'
        npm i -g "$NPM_NATIVE"
        e_success "Native Apps Packages successfully installed!"

        # Install Database Extensions
        e_header "Installing Database Extensions"
        local NPM_DB_EXT='add-cors-to-couchdb nodal firebase-tools firebase-bolt'
        npm i -g "$NPM_DB_EXT"
        e_success "Database Extensions successfully installed!"

        # Install Code Documentation Packages
        e_header "Installing Code Documentation Packages"
        local NPM_DOCS='esdoc sassdoc'
        npm i -g "$NPM_DOCS"
        e_success "Code Documentation Packages successfully installed!"

        # Install Security Packages
        e_header "Installing Security Packages"
        local NPM_DOCS='retire nsp helmet'
        npm i -g "$NPM_DOCS"
        e_success "Security Packages successfully installed!"

    else

        printf "\n"
        e_error "Error: npm not found."
        printf "Aborting...\n"
        exit

    fi

}
